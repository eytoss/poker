# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-07 16:05
from __future__ import unicode_literals

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(blank=True, default=uuid.uuid4, help_text=b'Unique, externally-friendly identifier for a specific poker game', max_length=36, unique=True)),
                ('pocket_cards', models.CharField(blank=True, help_text=b"Keeping records of the pocket cards the game have dealt with, so the next card generated from the game should never be one of them:) we will limit X=3 players at most in a game for now, so the maximum of cards will be (2+1+2+1)*X-1 = 17. '|' will be used as delimiter between two pocket cards and '$' will be used as delimiter between players. for example: h3|h4$d3|d4$c3|c4 represents 3 sets of pocket cards", max_length=125)),
                ('community_cards', models.CharField(blank=True, help_text=b"Keeping records of the community cards(0 ~ 5 cards) the game have dealt with using | as the delimiter. so the next card generated from the game should never be one of them:) for example: 'h3|d4|c6|s7' represents 4 cards has been dealt as community card and the current status of a game is in stage of `turn` ", max_length=14)),
                ('total_num_of_players', models.IntegerField(help_text=b'the total number of players who entered this game Initially.')),
                ('player_guids', models.CharField(blank=True, help_text=b"Keeping records of the pocket cards the game have dealt with, so the next card generated from the game should never be one of them:) we will limit X=3 players at most in a game for now, so the maximum of characters will be (36+1)*X-1 = 110. '|' will be used as delimiter between players for example: <guid_1>|<guid_2>|<guid_3> represents a game of 3 players", max_length=110)),
                ('player_to_action', models.CharField(blank=True, help_text=b"It's this player's turn to act. The game would pause it's status until this player took action.", max_length=36)),
                ('betting_status', models.CharField(blank=True, help_text=b"It's the current round betting status for all the active users The game engine would use this info to determine if next stage is ready.For example: FBCR means user 1 folded, user 2 bet, user 3 called and user 4 re-reraised, and this indicates the betting round is NOT over.", max_length=125)),
                ('stage', models.CharField(choices=[(b'P', b'PocketDone'), (b'I', b'Initial'), (b'T', b'TurnDone'), (b'O', b'GameOver'), (b'F', b'FLopDone'), (b'R', b'RiverDone')], help_text=b'the current stage of the game.', max_length=1)),
                ('bets', models.CharField(blank=True, help_text=b'place holder once we feel comfortable with introducing bets and betting history.', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(blank=True, default=uuid.uuid4, help_text=b'Unique, externally-friendly identifier for a specific user', max_length=36, unique=True)),
                ('username', models.CharField(help_text=b'Username, for example: bruce lee', max_length=20)),
            ],
        ),
    ]
